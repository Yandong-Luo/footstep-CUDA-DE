Script started on 2025-02-12 22:39:51-06:00 [TERM="xterm-256color" TTY="/dev/pts/2" COLUMNS="61" LINES="29"]
[1m[7m%[27m[1m[0m                                                             ]2;chris@chris-pc:~/footstep-CUDA-DE/build]1;..CUDA-DE/build]7;file://chris-pc/home/chris/footstep-CUDA-DE/build\[0m[27m[24m[J
[1m[33m22:39:51[0m[33m[39m[1m [0m[1min [0m[1m[36mfootstep-CUDA-DE/build[0m[36m[39m[1m [0m[1mvia ðŸ’» [0m[1m[34mlab_env[0m[34m[39m[1m [0m[1m[37m
[0m[37m[39m[1m[32mâžœ [0m[32m[39m[1m [0m[K[57C[1A[1B[57D[?1h=[?2004h[A[A[0m[27m[24m[J
[1m[33m22:39:51[0m[33m[39m[1m [0m[1min [0m[1m[36mfootstep-CUDA-DE/build[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[35mî‚  main[0m[35m[39m[1m[31m [!?][0m[31m[39m[0m[39m[1m [0m[1mvia ðŸ’» [0m[1m[34mlab_env[0m[34m[39m[1m [0m[1m[37m
[0m[37m[39m[1m[32mâžœ [0m[32m[39m[1m [0m[K[57C[1A[1B[57D[1m[31mm[0m[39m[1m[31mm[0m[39m[90make[39m[1m[31mm[1m[31ma[0m[39m[1m[31mm[1m[31ma[1m[31mk[0m[39m[0m[32mm[0m[32ma[0m[32mk[32me[39m[?1l>[?2004l
]2;make]1;make[ 11%] [32mBuilding CUDA object CMakeFiles/cuda_DE.dir/src/diff_evolution_solver/solver.cu.o[0m
[01m[0m[01m/home/chris/footstep-CUDA-DE/include/diff_evolution_solver/evolve.cuh(117)[0m: [01;35mwarning[0m: variable [01m"sm_block_sum"[0m was declared but never referenced

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/numeric/arithmetic_tuple.hpp(87)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::as_arithmetic_tuple(const T &) [with T=int]"[0m
          detected during:
            instantiation of [01m"auto cute::as_arithmetic_tuple(const T &) [with T=int]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(643): here[0m
            instantiation of [01m"auto cute::coshape<Is...,Shape,Stride>(const cute::Layout<Shape, Stride> &) [with Is=<>, Shape=cute::tuple<cute::Int<0>, cute::_0, cute::_1>, Stride=cute::tuple<cute::_1, cute::_0, cute::_0>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(656): here[0m
            instantiation of [01m"auto cute::cosize<Is...,Shape,Stride>(const cute::Layout<Shape, Stride> &) [with Is=<>, Shape=cute::tuple<cute::Int<0>, cute::_0, cute::_1>, Stride=cute::tuple<cute::_1, cute::_0, cute::_0>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1593): here[0m
            instantiation of [01m"auto cute::logical_product(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, TShape=cute::tuple<cute::Int<0>, cute::_0, cute::_1>, TStride=cute::tuple<cute::_1, cute::_0, cute::_0>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1627): here[0m
            instantiation of [01m"auto cute::zipped_product(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, Tiler=cute::Layout<cute::tuple<cute::Int<0>, cute::_0, cute::_1>, cute::tuple<cute::_1, cute::_0, cute::_0>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1638): here[0m
            [ 3 instantiation contexts not shown ]
            instantiation of [01m"auto cute::make_tiled_mma(const MMA_Op &, const MMAThrLayout &, const Permutations &) [with MMA_Op=cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, MMAThrLayout=cute::Layout<cute::Shape<cute::Int<0>, cute::Int<0>>, cute::LayoutLeft::Apply<cute::Shape<cute::Int<0>, cute::Int<0>>>>, Permutations=cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute_db.hpp(407): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::cute_config<AType, BType, CType, M, N, K, ThreadsAvailable, HasBlockSize, SM, Benchmark, MmaAtom, TileX, TileY> [with AType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, BType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, CType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, M=100, N=1, K=5, ThreadsAvailable=128, HasBlockSize=false, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(106): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY> [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::BlockDim<256U, 1U, 1U>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(190): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::execution_suggestions<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM> [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(168): here[0m
            instantiation of class [01m"cublasdx::detail::blas_block_execution<Operators...> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(18): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=int, Stride=cute::_1]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=int, Stride=cute::_1]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=int, Stride=cute::_1, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=int, LStride=cute::_1, RShape=cute::tuple<cute::Int<0>, cute::_0, cute::_1>, RStride=cute::tuple<cute::_1, cute::_0, cute::_0>]"[0m [32m
(1593): here[0m
            instantiation of [01m"auto cute::logical_product(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, TShape=cute::tuple<cute::Int<0>, cute::_0, cute::_1>, TStride=cute::tuple<cute::_1, cute::_0, cute::_0>]"[0m [32m
(1627): here[0m
            instantiation of [01m"auto cute::zipped_product(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, Tiler=cute::Layout<cute::tuple<cute::Int<0>, cute::_0, cute::_1>, cute::tuple<cute::_1, cute::_0, cute::_0>>]"[0m [32m
(1638): here[0m
            [ 3 instantiation contexts not shown ]
            instantiation of [01m"auto cute::make_tiled_mma(const MMA_Op &, const MMAThrLayout &, const Permutations &) [with MMA_Op=cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, MMAThrLayout=cute::Layout<cute::Shape<cute::Int<0>, cute::Int<0>>, cute::LayoutLeft::Apply<cute::Shape<cute::Int<0>, cute::Int<0>>>>, Permutations=cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute_db.hpp(407): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::cute_config<AType, BType, CType, M, N, K, ThreadsAvailable, HasBlockSize, SM, Benchmark, MmaAtom, TileX, TileY> [with AType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, BType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, CType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, M=100, N=1, K=5, ThreadsAvailable=128, HasBlockSize=false, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(106): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY> [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::BlockDim<256U, 1U, 1U>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(190): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::execution_suggestions<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM> [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(168): here[0m
            instantiation of class [01m"cublasdx::detail::blas_block_execution<Operators...> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(18): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/numeric/arithmetic_tuple.hpp(87)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::as_arithmetic_tuple(const T &) [with T=cute::C<31>]"[0m
          detected during:
            instantiation of [01m"auto cute::as_arithmetic_tuple(const T &) [with T=cute::C<31>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(643): here[0m
            instantiation of [01m"auto cute::coshape<Is...,Shape,Stride>(const cute::Layout<Shape, Stride> &) [with Is=<>, Shape=cute::tuple<cute::_1, cute::C<32>, cute::_1>, Stride=cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(656): here[0m
            instantiation of [01m"auto cute::cosize<Is...,Shape,Stride>(const cute::Layout<Shape, Stride> &) [with Is=<>, Shape=cute::tuple<cute::_1, cute::C<32>, cute::_1>, Stride=cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1593): here[0m
            instantiation of [01m"auto cute::logical_product(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, TShape=cute::tuple<cute::_1, cute::C<32>, cute::_1>, TStride=cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1627): here[0m
            instantiation of [01m"auto cute::zipped_product(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, Tiler=cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1638): here[0m
            [ 4 instantiation contexts not shown ]
            instantiation of class [01m"cublasdx::detail::cute_backend::generated_config_getter<AType, BType, CType, M, N, K, ThreadsAvailable, HasBlockSize, SM> [with AType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, BType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, CType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, M=100, N=1, K=5, ThreadsAvailable=128, HasBlockSize=false, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute_db.hpp(416): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::cute_config<AType, BType, CType, M, N, K, ThreadsAvailable, HasBlockSize, SM, Benchmark, MmaAtom, TileX, TileY> [with AType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, BType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, CType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, M=100, N=1, K=5, ThreadsAvailable=128, HasBlockSize=false, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(106): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY> [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::BlockDim<256U, 1U, 1U>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(190): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::execution_suggestions<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM> [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(168): here[0m
            instantiation of class [01m"cublasdx::detail::blas_block_execution<Operators...> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(18): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::_32, Stride=cute::LayoutLeft::Apply<cute::_32>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::_32, Stride=cute::LayoutLeft::Apply<cute::_32>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::_32, Stride=cute::LayoutLeft::Apply<cute::_32>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::_32, LStride=cute::LayoutLeft::Apply<cute::_32>, RShape=cute::tuple<cute::_1, cute::C<32>, cute::_1>, RStride=cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>]"[0m [32m
(1593): here[0m
            instantiation of [01m"auto cute::logical_product(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, TShape=cute::tuple<cute::_1, cute::C<32>, cute::_1>, TStride=cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>]"[0m [32m
(1627): here[0m
            instantiation of [01m"auto cute::zipped_product(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, Tiler=cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>]"[0m [32m
(1638): here[0m
            [ 4 instantiation contexts not shown ]
            instantiation of class [01m"cublasdx::detail::cute_backend::generated_config_getter<AType, BType, CType, M, N, K, ThreadsAvailable, HasBlockSize, SM> [with AType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, BType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, CType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, M=100, N=1, K=5, ThreadsAvailable=128, HasBlockSize=false, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute_db.hpp(416): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::cute_config<AType, BType, CType, M, N, K, ThreadsAvailable, HasBlockSize, SM, Benchmark, MmaAtom, TileX, TileY> [with AType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, BType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, CType=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, M=100, N=1, K=5, ThreadsAvailable=128, HasBlockSize=false, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(106): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY> [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::BlockDim<256U, 1U, 1U>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(190): here[0m
            instantiation of class [01m"cublasdx::detail::cute_backend::execution_suggestions<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM> [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(168): here[0m
            instantiation of class [01m"cublasdx::detail::blas_block_execution<Operators...> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(18): here[0m

[01m[0m[01m/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(687)[0m: [01;31merror[0m: operand types are incompatible ("float *" and "double")

[01m[0m[01m/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute_utils.hpp(73)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cublasdx::detail::choose<M,ArgA,ArgB,ArgC>(const ArgA &, const ArgB &, const ArgC &) [with M=cublasdx::detail::matrix::B, ArgA=cublasdx::arrangement, ArgB=cublasdx::arrangement, ArgC=cublasdx::arrangement]"[0m
          detected during:
            instantiation of [01m"auto cublasdx::detail::choose<M,ArgA,ArgB,ArgC>(const ArgA &, const ArgB &, const ArgC &) [with M=cublasdx::detail::matrix::B, ArgA=cublasdx::arrangement, ArgB=cublasdx::arrangement, ArgC=cublasdx::arrangement]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(275): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::get_layout_gmem<M>() [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, M=cublasdx::detail::matrix::B]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(372): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::get_layout_gmem_b(Ts...) [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, Ts=<>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(40): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute_utils.hpp(73)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cublasdx::detail::choose<M,ArgA,ArgB,ArgC>(const ArgA &, const ArgB &, const ArgC &) [with M=cublasdx::detail::matrix::B, ArgA=unsigned int, ArgB=unsigned int, ArgC=unsigned int]"[0m
          detected during:
            instantiation of [01m"auto cublasdx::detail::choose<M,ArgA,ArgB,ArgC>(const ArgA &, const ArgB &, const ArgC &) [with M=cublasdx::detail::matrix::B, ArgA=unsigned int, ArgB=unsigned int, ArgC=unsigned int]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(276): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::get_layout_gmem<M>() [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, M=cublasdx::detail::matrix::B]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(372): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::get_layout_gmem_b(Ts...) [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, Ts=<>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(40): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute_utils.hpp(73)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cublasdx::detail::choose<M,ArgA,ArgB,ArgC>(const ArgA &, const ArgB &, const ArgC &) [with M=cublasdx::detail::matrix::C, ArgA=cublasdx::arrangement, ArgB=cublasdx::arrangement, ArgC=cublasdx::arrangement]"[0m
          detected during:
            instantiation of [01m"auto cublasdx::detail::choose<M,ArgA,ArgB,ArgC>(const ArgA &, const ArgB &, const ArgC &) [with M=cublasdx::detail::matrix::C, ArgA=cublasdx::arrangement, ArgB=cublasdx::arrangement, ArgC=cublasdx::arrangement]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(275): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::get_layout_gmem<M>() [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, M=cublasdx::detail::matrix::C]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(378): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::get_layout_gmem_c(Ts...) [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, Ts=<>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(41): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute_utils.hpp(73)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cublasdx::detail::choose<M,ArgA,ArgB,ArgC>(const ArgA &, const ArgB &, const ArgC &) [with M=cublasdx::detail::matrix::C, ArgA=unsigned int, ArgB=unsigned int, ArgC=unsigned int]"[0m
          detected during:
            instantiation of [01m"auto cublasdx::detail::choose<M,ArgA,ArgB,ArgC>(const ArgA &, const ArgB &, const ArgC &) [with M=cublasdx::detail::matrix::C, ArgA=unsigned int, ArgB=unsigned int, ArgC=unsigned int]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(276): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::get_layout_gmem<M>() [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, M=cublasdx::detail::matrix::C]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(378): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::get_layout_gmem_c(Ts...) [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, Ts=<>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(41): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/include/cublasdx/include/detail/tensor.hpp(38)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr_impl<T,K>(K *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, T=std::conditional_t<false, cublasdx::complex<float>, float>, K=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m
          detected during:
            instantiation of [01m"auto cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr_impl<T,K>(K *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, T=std::conditional_t<false, cublasdx::complex<float>, float>, K=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m [32m
(45): here[0m
            instantiation of [01m"auto cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr(T *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, T=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m [32m
(71): here[0m
            instantiation of [01m"auto cublasdx::make_tensor(T *, const cublasdx::detail::pointer_layout<PointerTag, Layout> &) [with T=std::conditional_t<false, cublasdx::complex<float>, float>, PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(45): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/include/cublasdx/include/detail/tensor.hpp(38)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr_impl<T,K>(K *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, T=std::conditional_t<false, cublasdx::complex<float>, float>, K=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m
          detected during:
            instantiation of [01m"auto cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr_impl<T,K>(K *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, T=std::conditional_t<false, cublasdx::complex<float>, float>, K=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m [32m
(45): here[0m
            instantiation of [01m"auto cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr(T *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, T=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m [32m
(71): here[0m
            instantiation of [01m"auto cublasdx::make_tensor(T *, const cublasdx::detail::pointer_layout<PointerTag, Layout> &) [with T=std::conditional_t<false, cublasdx::complex<float>, float>, PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(46): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/include/cublasdx/include/detail/tensor.hpp(38)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr_impl<T,K>(K *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, T=std::conditional_t<false, cublasdx::complex<float>, float>, K=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m
          detected during:
            instantiation of [01m"auto cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr_impl<T,K>(K *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, T=std::conditional_t<false, cublasdx::complex<float>, float>, K=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m [32m
(45): here[0m
            instantiation of [01m"auto cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr(T *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, T=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m [32m
(71): here[0m
            instantiation of [01m"auto cublasdx::make_tensor(T *, const cublasdx::detail::pointer_layout<PointerTag, Layout> &) [with T=std::conditional_t<false, cublasdx::complex<float>, float>, PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(47): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(29)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cublasdx::detail::get_thread_idx<BlockDimRank>() [with BlockDimRank=1U]"[0m
          detected during:
            instantiation of [01m"unsigned int cublasdx::detail::get_thread_idx<BlockDimRank>() [with BlockDimRank=1U]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(87): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Ex_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(51): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(108)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::heuristic_permutation(const cute::Tensor<AEngine, ALayout> &, const cute::Tensor<BEngine, BLayout> &) [with AEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m
          detected during:
            instantiation of [01m"auto cute::heuristic_permutation(const cute::Tensor<AEngine, ALayout> &, const cute::Tensor<BEngine, BLayout> &) [with AEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
(159): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Ex_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(51): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(893)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::_1, <auto-2>=cute::Int<1>]"[0m
          detected during:
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::_1, <auto-2>=cute::Int<1>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/tuple_algorithms.hpp(418): here[0m
            instantiation of [01m"auto cute::detail::fold(T &&, V &&, F &&, cute::seq<I0>) [with T=std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::tuple<cute::_1, cute::_1>, cute::C<1>>>, V=cute::_1, F=lambda [](const auto &, const auto &)->auto &, I0=1]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/tuple_algorithms.hpp(483): here[0m
            instantiation of [01m"auto cute::fold_first(T &&, F &&) [with T=std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::tuple<cute::_1, cute::_1>, cute::C<1>>>, F=lambda [](const auto &, const auto &)->auto]"[0m [32m
(896): here[0m
            instantiation of [01m"auto cute::coalesce(const Shape &) [with Shape=std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::tuple<cute::_1, cute::_1>, cute::C<1>>>]"[0m [32m
(1162): here[0m
            instantiation of [01m"auto cute::detail::complement(const Shape &, const Stride &, const CoTarget &) [with Shape=cute::tuple<cute::Int<5>, cute::Int<100>>, Stride=cute::tuple<cute::Int<100>, cute::Int<1>>, CoTarget=cute::tuple<cute::Int<100>, cute::Int<5>>]"[0m [32m
(1181): here[0m
            [ 3 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Ex_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(51): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/numeric/arithmetic_tuple.hpp(87)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::as_arithmetic_tuple(const T &) [with T=cute::C<499>]"[0m
          detected during:
            instantiation of [01m"auto cute::as_arithmetic_tuple(const T &) [with T=cute::C<499>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(643): here[0m
            instantiation of [01m"auto cute::coshape<Is...,Shape,Stride>(const cute::Layout<Shape, Stride> &) [with Is=<>, Shape=cute::Shape<cute::tuple<cute::Int<5>, cute::Int<100>>, cute::_1>, Stride=cute::Stride<cute::tuple<cute::Int<100>, cute::Int<1>>, cute::_0>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1082): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::Int<100>, cute::Int<5>>, LStride=cute::tuple<cute::C<5>, cute::_1>, RShape=cute::Shape<cute::tuple<cute::Int<5>, cute::Int<100>>, cute::_1>, RStride=cute::Stride<cute::tuple<cute::Int<100>, cute::Int<1>>, cute::_0>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::Int<100>, cute::Int<5>>, LStride=cute::tuple<cute::C<5>, cute::_1>, TShape=cute::tuple<cute::Int<5>, cute::Int<100>>, TStride=cute::tuple<cute::Int<100>, cute::Int<1>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(866): here[0m
            instantiation of [01m"auto cute::logical_divide(Tensor &&, const Tiler &) [with Tensor=const cute::Tensor<cute::ViewEngine<cute::gmem_ptr<const float *>>, cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>> &, Tiler=cute::Layout<cute::tuple<cute::Int<5>, cute::Int<100>>, cute::tuple<cute::Int<100>, cute::Int<1>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(163): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Ex_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(51): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::Int<100>, cute::Int<5>>, Stride=cute::tuple<cute::C<5>, cute::_1>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::Int<100>, cute::Int<5>>, Stride=cute::tuple<cute::C<5>, cute::_1>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Shape<cute::Int<100>, cute::Int<5>>, Stride=cute::tuple<cute::C<5>, cute::_1>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::Int<100>, cute::Int<5>>, LStride=cute::tuple<cute::C<5>, cute::_1>, RShape=cute::Shape<cute::tuple<cute::Int<5>, cute::Int<100>>, cute::_1>, RStride=cute::Stride<cute::tuple<cute::Int<100>, cute::Int<1>>, cute::_0>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::Int<100>, cute::Int<5>>, LStride=cute::tuple<cute::C<5>, cute::_1>, TShape=cute::tuple<cute::Int<5>, cute::Int<100>>, TStride=cute::tuple<cute::Int<100>, cute::Int<1>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(866): here[0m
            instantiation of [01m"auto cute::logical_divide(Tensor &&, const Tiler &) [with Tensor=const cute::Tensor<cute::ViewEngine<cute::gmem_ptr<const float *>>, cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>> &, Tiler=cute::Layout<cute::tuple<cute::Int<5>, cute::Int<100>>, cute::tuple<cute::Int<100>, cute::Int<1>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(163): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Ex_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(51): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(108)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::heuristic_permutation(const cute::Tensor<AEngine, ALayout> &, const cute::Tensor<BEngine, BLayout> &) [with AEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m
          detected during:
            instantiation of [01m"auto cute::heuristic_permutation(const cute::Tensor<AEngine, ALayout> &, const cute::Tensor<BEngine, BLayout> &) [with AEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
(159): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Ex_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(52): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/numeric/arithmetic_tuple.hpp(87)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::as_arithmetic_tuple(const T &) [with T=cute::C<4>]"[0m
          detected during:
            instantiation of [01m"auto cute::as_arithmetic_tuple(const T &) [with T=cute::C<4>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(643): here[0m
            instantiation of [01m"auto cute::coshape<Is...,Shape,Stride>(const cute::Layout<Shape, Stride> &) [with Is=<>, Shape=cute::Shape<cute::Int<5>, cute::Int<1>>, Stride=cute::tuple<cute::C<1>, cute::Int<0>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1082): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::Int<5>, cute::Int<1>>, LStride=cute::Stride<cute::Int<1>, cute::Int<1>>, RShape=cute::Shape<cute::Int<5>, cute::Int<1>>, RStride=cute::tuple<cute::C<1>, cute::Int<0>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::Int<5>, cute::Int<1>>, LStride=cute::Stride<cute::Int<1>, cute::Int<1>>, TShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<5>>>, TStride=cute::C<1>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(866): here[0m
            instantiation of [01m"auto cute::logical_divide(Tensor &&, const Tiler &) [with Tensor=const cute::Tensor<cute::ViewEngine<cute::gmem_ptr<const float *>>, cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>> &, Tiler=cute::Layout<std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<5>>>, cute::C<1>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(163): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Ex_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(52): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(108)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::heuristic_permutation(const cute::Tensor<AEngine, ALayout> &, const cute::Tensor<BEngine, BLayout> &) [with AEngine=cute::ViewEngine<cute::gmem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>]"[0m
          detected during:
            instantiation of [01m"auto cute::heuristic_permutation(const cute::Tensor<AEngine, ALayout> &, const cute::Tensor<BEngine, BLayout> &) [with AEngine=cute::ViewEngine<cute::gmem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>]"[0m [32m
(159): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Ex_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(53): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/numeric/arithmetic_tuple.hpp(87)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::as_arithmetic_tuple(const T &) [with T=cute::C<99>]"[0m
          detected during:
            instantiation of [01m"auto cute::as_arithmetic_tuple(const T &) [with T=cute::C<99>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(643): here[0m
            instantiation of [01m"auto cute::coshape<Is...,Shape,Stride>(const cute::Layout<Shape, Stride> &) [with Is=<>, Shape=cute::Shape<cute::Int<100>, cute::Int<1>>, Stride=cute::tuple<cute::C<1>, cute::Int<0>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1082): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::Int<100>, cute::Int<1>>, LStride=cute::Stride<cute::Int<1>, cute::Int<100>>, RShape=cute::Shape<cute::Int<100>, cute::Int<1>>, RStride=cute::tuple<cute::C<1>, cute::Int<0>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::Int<100>, cute::Int<1>>, LStride=cute::Stride<cute::Int<1>, cute::Int<100>>, TShape=cute::Int<100>, TStride=cute::_1]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(866): here[0m
            instantiation of [01m"auto cute::logical_divide(Tensor &&, const Tiler &) [with Tensor=const cute::Tensor<cute::ViewEngine<cute::gmem_ptr<float *>>, cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>> &, Tiler=cute::Layout<cute::Int<100>, cute::_1>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(163): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Ex_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(53): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<100>, Stride=cute::Int<5>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<100>, Stride=cute::Int<5>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Int<100>, Stride=cute::Int<5>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Int<100>, LStride=cute::Int<5>, RShape=cute::Shape<cute::_1, cute::Int<100>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Int<100>, LStride=cute::Int<5>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1514): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::Int<100>, LStride=cute::Int<5>, Tiler=cute::_1]"[0m [32m
(1510): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<5>>>, Stride=cute::C<1>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<5>>>, Stride=cute::C<1>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<5>>>, Stride=cute::C<1>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<5>>>, LStride=cute::C<1>, RShape=cute::Shape<cute::_1, cute::Int<5>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<5>>>, LStride=cute::C<1>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1514): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<5>>>, LStride=cute::C<1>, Tiler=cute::Int<1>]"[0m [32m
(1510): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(893)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::_1, <auto-2>=cute::C<100>]"[0m
          detected during:
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::_1, <auto-2>=cute::C<100>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/tuple_algorithms.hpp(418): here[0m
            instantiation of [01m"auto cute::detail::fold(T &&, V &&, F &&, cute::seq<I0>) [with T=cute::Stride<cute::Int<1>, cute::Int<100>>, V=cute::_1, F=lambda [](const auto &, const auto &)->auto &, I0=1]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/tuple_algorithms.hpp(483): here[0m
            instantiation of [01m"auto cute::fold_first(T &&, F &&) [with T=cute::Stride<cute::Int<1>, cute::Int<100>>, F=lambda [](const auto &, const auto &)->auto]"[0m [32m
(896): here[0m
            instantiation of [01m"auto cute::coalesce(const Shape &) [with Shape=cute::tuple<cute::Int<1>, cute::C<100>>]"[0m [32m
(1128): here[0m
            instantiation of [01m"auto cute::detail::complement(const Shape &, const Stride &, const CoTarget &) [with Shape=cute::C<1>, Stride=cute::C<0>, CoTarget=cute::tuple<cute::Int<1>, cute::C<100>>]"[0m [32m
(1181): here[0m
            [ 11 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::Int<5>>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::Int<5>>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::Int<5>>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<100>>, LStride=cute::Stride<cute::_0, cute::Int<5>>, RShape=cute::Shape<cute::_1, cute::Int<100>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<100>>, LStride=cute::Stride<cute::_0, cute::Int<5>>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1510): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<cute::Shape<cute::_1, cute::Int<100>>, cute::Stride<cute::_0, cute::Int<5>>>, <auto-2>=cute::Layout<cute::_1, cute::LayoutLeft::Apply<cute::_1>>]"[0m [32m
(733): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(893)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::_1, <auto-2>=cute::Int<5>]"[0m
          detected during:
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::_1, <auto-2>=cute::Int<5>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/tuple_algorithms.hpp(418): here[0m
            instantiation of [01m"auto cute::detail::fold(T &&, V &&, F &&, cute::seq<I0>) [with T=cute::Stride<cute::Int<1>, cute::Int<5>>, V=cute::_1, F=lambda [](const auto &, const auto &)->auto &, I0=1]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/tuple_algorithms.hpp(483): here[0m
            instantiation of [01m"auto cute::fold_first(T &&, F &&) [with T=cute::Stride<cute::Int<1>, cute::Int<5>>, F=lambda [](const auto &, const auto &)->auto]"[0m [32m
(896): here[0m
            instantiation of [01m"auto cute::coalesce(const Shape &) [with Shape=cute::tuple<cute::Int<1>, cute::C<5>>]"[0m [32m
(1128): here[0m
            instantiation of [01m"auto cute::detail::complement(const Shape &, const Stride &, const CoTarget &) [with Shape=cute::C<1>, Stride=cute::C<0>, CoTarget=cute::tuple<cute::Int<1>, cute::C<5>>]"[0m [32m
(1181): here[0m
            [ 11 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<5>>, Stride=cute::Stride<cute::_0, cute::Int<1>>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<5>>, Stride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Shape<cute::_1, cute::Int<5>>, Stride=cute::Stride<cute::_0, cute::Int<1>>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<5>>, LStride=cute::Stride<cute::_0, cute::Int<1>>, RShape=cute::Shape<cute::_1, cute::Int<5>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<5>>, LStride=cute::Stride<cute::_0, cute::Int<1>>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1510): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<cute::Shape<cute::_1, cute::Int<5>>, cute::Stride<cute::_0, cute::Int<1>>>, <auto-2>=cute::Layout<cute::_1, cute::LayoutLeft::Apply<cute::_1>>]"[0m [32m
(733): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/numeric/arithmetic_tuple.hpp(87)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::as_arithmetic_tuple(const T &) [with T=cute::C<0>]"[0m
          detected during:
            instantiation of [01m"auto cute::as_arithmetic_tuple(const T &) [with T=cute::C<0>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(643): here[0m
            instantiation of [01m"auto cute::coshape<Is...,Shape,Stride>(const cute::Layout<Shape, Stride> &) [with Is=<>, Shape=cute::Shape<cute::_1, cute::_1>, Stride=cute::Stride<cute::_0, cute::_0>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1082): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::_1, cute::_1>, LStride=cute::Stride<cute::_0, cute::_0>, RShape=cute::Shape<cute::_1, cute::_1>, RStride=cute::Stride<cute::_0, cute::_0>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1096): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<cute::Shape<cute::_1, cute::_1>, cute::Stride<cute::_0, cute::_0>>, <auto-2>=cute::Layout<cute::Shape<cute::_1, cute::_1>, cute::Stride<cute::_0, cute::_0>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(733): here[0m
            instantiation of [01m"auto cute::detail::transform_layout(const Tuple0 &, const Tuple1 &, F &&, cute::seq<I...>, cute::seq<I0...>, cute::seq<I1...>) [with Tuple0=cute::Layout<cute::tuple<cute::tuple<cute::_1, cute::_1>, cute::tuple<cute::Int<100>, cute::Int<5>>>, cute::tuple<cute::tuple<cute::_0, cute::_0>, cute::tuple<cute::C<5>, cute::_1>>>, Tuple1=cute::Tile<cute::Layout<cute::Shape<cute::_1, cute::_1>, cute::Stride<cute::_0, cute::_0>>, cute::Underscore>, F=lambda [](const auto &, const auto &)->auto, I=<0, 1>, I0=<>, I1=<>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1096): here[0m
            [ 6 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(893)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::_32, <auto-2>=cute::Int<1>]"[0m
          detected during:
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::_32, <auto-2>=cute::Int<1>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/tuple_algorithms.hpp(418): here[0m
            instantiation of [01m"auto cute::detail::fold(T &&, V &&, F &&, cute::seq<I0>) [with T=cute::tuple<cute::_32, cute::_1>, V=cute::_32, F=lambda [](const auto &, const auto &)->auto &, I0=1]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/tuple_algorithms.hpp(483): here[0m
            instantiation of [01m"auto cute::fold_first(T &&, F &&) [with T=cute::tuple<cute::_32, cute::_1>, F=lambda [](const auto &, const auto &)->auto]"[0m [32m
(896): here[0m
            instantiation of [01m"auto cute::coalesce(const Shape &) [with Shape=cute::tuple<cute::_32, cute::_1>]"[0m [32m
(1128): here[0m
            instantiation of [01m"auto cute::detail::complement(const Shape &, const Stride &, const CoTarget &) [with Shape=cute::C<1>, Stride=cute::C<0>, CoTarget=cute::tuple<cute::_32, cute::_1>]"[0m [32m
(1181): here[0m
            [ 11 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<100>, Stride=cute::_1]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<100>, Stride=cute::_1]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Int<100>, Stride=cute::_1, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Int<100>, LStride=cute::_1, RShape=cute::Shape<cute::_1, cute::Int<100>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Int<100>, LStride=cute::_1, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1514): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::Int<100>, LStride=cute::_1, Tiler=cute::_1]"[0m [32m
(1510): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::Int<1>>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::Int<1>>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<100>>, LStride=cute::Stride<cute::_0, cute::Int<1>>, RShape=cute::Shape<cute::_1, cute::Int<100>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<100>>, LStride=cute::Stride<cute::_0, cute::Int<1>>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1510): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<cute::Shape<cute::_1, cute::Int<100>>, cute::Stride<cute::_0, cute::Int<1>>>, <auto-2>=cute::Layout<cute::_1, cute::LayoutLeft::Apply<cute::_1>>]"[0m [32m
(733): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, Stride=cute::C<100>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, Stride=cute::C<100>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, Stride=cute::C<100>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, LStride=cute::C<100>, RShape=cute::Shape<cute::_32, cute::_1>, RStride=cute::Stride<cute::Int<1>, cute::_0>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, LStride=cute::C<100>, TShape=cute::_32, TStride=cute::LayoutLeft::Apply<cute::_32>]"[0m [32m
(1510): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, cute::C<100>>, <auto-2>=cute::Layout<cute::_32, cute::LayoutLeft::Apply<cute::_32>>]"[0m [32m
(733): here[0m
            [ 12 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::C<500>, Stride=cute::_1]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::C<500>, Stride=cute::_1]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::C<500>, Stride=cute::_1, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::C<500>, LStride=cute::_1, RShape=cute::Shape<cute::Int<100>, cute::Int<5>>, RStride=cute::tuple<cute::C<5>, cute::_1>]"[0m [32m
(1593): here[0m
            instantiation of [01m"auto cute::logical_product(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, TShape=cute::Shape<cute::Int<100>, cute::Int<5>>, TStride=cute::tuple<cute::C<5>, cute::_1>]"[0m [32m
(1627): here[0m
            instantiation of [01m"auto cute::zipped_product(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, Tiler=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>]"[0m [32m
(1638): here[0m
            [ 7 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(366)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Arg0=cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<0>, cute::C<5>, cute::_1>>, Args=<>]"[0m
          detected during:
            instantiation of [01m"auto cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Arg0=cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<0>, cute::C<5>, cute::_1>>, Args=<>]"[0m [32m
(381): here[0m
            instantiation of [01m"auto cute::make_tensor<T,Args...>(const Args &...) [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Args=<cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<0>, cute::C<5>, cute::_1>>>]"[0m [32m
(437): here[0m
            instantiation of [01m"auto cute::make_fragment_like<NewT,Layout>(const Layout &) [with NewT=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Layout=cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<0>, cute::C<5>, cute::_1>>]"[0m [32m
(445): here[0m
            instantiation of [01m"auto cute::make_fragment_like<NewT,Engine,Layout>(const cute::Tensor<Engine, Layout> &) [with NewT=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Engine=cute::ViewEngine<cute::smem_ptr<float *>>, Layout=std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<0>, cute::C<5>, cute::_1>>, cute::C<0>>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/atom/mma_atom.hpp(160): here[0m
            instantiation of [01m"auto cute::MMA_Atom<cute::MMA_Traits<Args...>>::make_fragment_A(ATensor &&) [with Args=<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, ATensor=cute::Tensor<cute::ViewEngine<cute::smem_ptr<float *>>, std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<0>, cute::C<5>, cute::_1>>, cute::C<0>>>> &]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(89): here[0m
            [ 2 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(366)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Arg0=cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<5>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>, Args=<>]"[0m
          detected during:
            instantiation of [01m"auto cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Arg0=cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<5>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>, Args=<>]"[0m [32m
(381): here[0m
            instantiation of [01m"auto cute::make_tensor<T,Args...>(const Args &...) [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Args=<cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<5>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>>]"[0m [32m
(437): here[0m
            instantiation of [01m"auto cute::make_fragment_like<NewT,Layout>(const Layout &) [with NewT=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Layout=cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<5>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>]"[0m [32m
(445): here[0m
            instantiation of [01m"auto cute::make_fragment_like<NewT,Engine,Layout>(const cute::Tensor<Engine, Layout> &) [with NewT=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Engine=cute::ViewEngine<cute::smem_ptr<float *>>, Layout=std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<5>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>, unsigned int>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/atom/mma_atom.hpp(182): here[0m
            instantiation of [01m"auto cute::MMA_Atom<cute::MMA_Traits<Args...>>::make_fragment_B(BTensor &&) [with Args=<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, BTensor=cute::Tensor<cute::ViewEngine<cute::smem_ptr<float *>>, std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<5>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>, unsigned int>>> &]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(90): here[0m
            [ 2 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(366)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Arg0=cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<1>>, Args=<>]"[0m
          detected during:
            instantiation of [01m"auto cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Arg0=cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<1>>, Args=<>]"[0m [32m
(381): here[0m
            instantiation of [01m"auto cute::make_tensor<T,Args...>(const Args &...) [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Args=<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<1>>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/atom/mma_atom.hpp(141): here[0m
            instantiation of [01m"auto cute::MMA_Atom<cute::MMA_Traits<Args...>>::make_fragment_C(CTensor &&) [with Args=<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, CTensor=cute::Tensor<cute::ViewEngine<cute::smem_ptr<float *>>, std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<1>>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, unsigned int>>> &]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(91): here[0m
            instantiation of [01m"void cute::detail::cooperative_gemm_predication(const cute::ThrMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with Args=<cute::TiledMMA<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, cute::tuple<cute::Int<0>, cute::Int<0>, unsigned int, cute::Int<0>>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(252): here[0m
            instantiation of [01m"void cute::detail::cooperative_gemm_predication(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(448): here[0m
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<100>, Stride=cute::ScaledBasis<cute::C<1>, 0>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<100>, Stride=cute::ScaledBasis<cute::C<1>, 0>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Int<100>, Stride=cute::ScaledBasis<cute::C<1>, 0>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Int<100>, LStride=cute::ScaledBasis<cute::C<1>, 0>, RShape=cute::Shape<cute::_1, cute::Int<100>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Int<100>, LStride=cute::ScaledBasis<cute::C<1>, 0>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1514): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::Int<100>, LStride=cute::ScaledBasis<cute::C<1>, 0>, Tiler=cute::_1]"[0m [32m
(1510): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<5>, Stride=cute::ScaledBasis<cute::C<1>, 1>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<5>, Stride=cute::ScaledBasis<cute::C<1>, 1>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Int<5>, Stride=cute::ScaledBasis<cute::C<1>, 1>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Int<5>, LStride=cute::ScaledBasis<cute::C<1>, 1>, RShape=cute::Shape<cute::_1, cute::Int<5>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Int<5>, LStride=cute::ScaledBasis<cute::C<1>, 1>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1514): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::Int<5>, LStride=cute::ScaledBasis<cute::C<1>, 1>, Tiler=cute::Int<1>]"[0m [32m
(1510): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 0>>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 0>>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 0>>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<100>>, LStride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 0>>, RShape=cute::Shape<cute::_1, cute::Int<100>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<100>>, LStride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 0>>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1510): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<cute::Shape<cute::_1, cute::Int<100>>, cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 0>>>, <auto-2>=cute::Layout<cute::_1, cute::LayoutLeft::Apply<cute::_1>>]"[0m [32m
(733): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<5>>, Stride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<5>>, Stride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Shape<cute::_1, cute::Int<5>>, Stride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<5>>, LStride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>, RShape=cute::Shape<cute::_1, cute::Int<5>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<5>>, LStride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1510): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<cute::Shape<cute::_1, cute::Int<5>>, cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>>, <auto-2>=cute::Layout<cute::_1, cute::LayoutLeft::Apply<cute::_1>>]"[0m [32m
(733): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, Stride=cute::ScaledBasis<cute::C<1>, 0>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, Stride=cute::ScaledBasis<cute::C<1>, 0>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, Stride=cute::ScaledBasis<cute::C<1>, 0>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, LStride=cute::ScaledBasis<cute::C<1>, 0>, RShape=cute::Shape<cute::_32, cute::_1>, RStride=cute::Stride<cute::Int<1>, cute::_0>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, LStride=cute::ScaledBasis<cute::C<1>, 0>, TShape=cute::_32, TStride=cute::LayoutLeft::Apply<cute::_32>]"[0m [32m
(1510): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, cute::ScaledBasis<cute::C<1>, 0>>, <auto-2>=cute::Layout<cute::_32, cute::LayoutLeft::Apply<cute::_32>>]"[0m [32m
(733): here[0m
            [ 12 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/numeric/arithmetic_tuple.hpp(87)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::as_arithmetic_tuple(const T &) [with T=unsigned int]"[0m
          detected during:
            instantiation of [01m"auto cute::as_arithmetic_tuple(const T &) [with T=unsigned int]"[0m [32m
(299): here[0m
            instantiation of [01m"auto cute::as_arithmetic_tuple(const cute::ScaledBasis<T, N> &) [with T=unsigned int, N=0]"[0m [32m
(432): here[0m
            instantiation of [01m"auto cute::operator+(const cute::ScaledBasis<T, N> &, const cute::ScaledBasis<U, M> &) [with T=unsigned int, N=0, U=cute::C<0>, M=1]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/stride.hpp(67): here[0m
            instantiation of [01m"auto cute::detail::crd2idx_ttt(const Coord &, const Shape &, const Stride &, cute::seq<Is...>) [with Coord=cute::Coord<cute::Coord<cute::Int<0>, cute::Coord<unsigned int, cute::_0>>, cute::tuple<cute::Underscore, cute::tuple<cute::Underscore, cute::Underscore>>>, Shape=cute::tuple<cute::tuple<cute::C<1>, cute::tuple<cute::_32, cute::_1>>, cute::tuple<cute::C<1>, cute::tuple<cute::Int<1>, cute::C<5>>>>, Stride=cute::tuple<cute::tuple<cute::C<0>, cute::tuple<cute::ScaledBasis<cute::C<1>, 0>, cute::_0>>, cute::tuple<cute::C<0>, cute::tuple<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>>>, Is=<0, 1>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/stride.hpp(104): here[0m
            instantiation of [01m"auto cute::crd2idx(const Coord &, const Shape &, const Stride &) [with Coord=cute::Coord<cute::Coord<cute::Int<0>, cute::Coord<unsigned int, cute::_0>>, cute::tuple<cute::Underscore, cute::tuple<cute::Underscore, cute::Underscore>>>, Shape=cute::tuple<cute::tuple<cute::C<1>, cute::tuple<cute::_32, cute::_1>>, cute::tuple<cute::C<1>, cute::tuple<cute::Int<1>, cute::C<5>>>>, Stride=cute::tuple<cute::tuple<cute::C<0>, cute::tuple<cute::ScaledBasis<cute::C<1>, 0>, cute::_0>>, cute::tuple<cute::C<0>, cute::tuple<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(671): here[0m
            [ 7 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(366)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=__nv_bool, Arg0=cute::tuple<cute::Int<1>, cute::C<100>>, Args=<>]"[0m
          detected during:
            instantiation of [01m"auto cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=__nv_bool, Arg0=cute::tuple<cute::Int<1>, cute::C<100>>, Args=<>]"[0m [32m
(381): here[0m
            instantiation of [01m"auto cute::make_tensor<T,Args...>(const Args &...) [with T=__nv_bool, Args=<cute::tuple<cute::Int<1>, cute::C<100>>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(121): here[0m
            instantiation of [01m"void cute::detail::cooperative_gemm_predication(const cute::ThrMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with Args=<cute::TiledMMA<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, cute::tuple<cute::Int<0>, cute::Int<0>, unsigned int, cute::Int<0>>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(252): here[0m
            instantiation of [01m"void cute::detail::cooperative_gemm_predication(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(448): here[0m
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(366)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=__nv_bool, Arg0=cute::tuple<cute::_1, cute::_1>, Args=<>]"[0m
          detected during:
            instantiation of [01m"auto cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=__nv_bool, Arg0=cute::tuple<cute::_1, cute::_1>, Args=<>]"[0m [32m
(381): here[0m
            instantiation of [01m"auto cute::make_tensor<T,Args...>(const Args &...) [with T=__nv_bool, Args=<cute::tuple<cute::_1, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(122): here[0m
            instantiation of [01m"void cute::detail::cooperative_gemm_predication(const cute::ThrMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with Args=<cute::TiledMMA<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, cute::tuple<cute::Int<0>, cute::Int<0>, unsigned int, cute::Int<0>>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(252): here[0m
            instantiation of [01m"void cute::detail::cooperative_gemm_predication(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(448): here[0m
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, Stride=cute::ScaledBasis<cute::C<1>, 1>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, Stride=cute::ScaledBasis<cute::C<1>, 1>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, Stride=cute::ScaledBasis<cute::C<1>, 1>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, LStride=cute::ScaledBasis<cute::C<1>, 1>, RShape=cute::Shape<cute::_32, cute::_1>, RStride=cute::Stride<cute::Int<1>, cute::_0>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, LStride=cute::ScaledBasis<cute::C<1>, 1>, TShape=cute::_32, TStride=cute::LayoutLeft::Apply<cute::_32>]"[0m [32m
(1510): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<std::__tuple_element_t<1UL, std::tuple<cute::tuple<>, cute::C<32>>>, cute::ScaledBasis<cute::C<1>, 1>>, <auto-2>=cute::Layout<cute::_32, cute::LayoutLeft::Apply<cute::_32>>]"[0m [32m
(733): here[0m
            [ 12 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<5>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=5, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 5U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<5>>, cute::tuple<cute::C<5>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<5>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Ex_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(91): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/include/cublasdx/include/detail/tensor.hpp(38)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr_impl<T,K>(K *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, T=std::conditional_t<false, cublasdx::complex<float>, float>, K=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m
          detected during:
            instantiation of [01m"auto cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr_impl<T,K>(K *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, T=std::conditional_t<false, cublasdx::complex<float>, float>, K=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m [32m
(45): here[0m
            instantiation of [01m"auto cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr(T *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, T=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m [32m
(71): here[0m
            instantiation of [01m"auto cublasdx::make_tensor(T *, const cublasdx::detail::pointer_layout<PointerTag, Layout> &) [with T=std::conditional_t<false, cublasdx::complex<float>, float>, PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(45): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/include/cublasdx/include/detail/tensor.hpp(38)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr_impl<T,K>(K *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, T=std::conditional_t<false, cublasdx::complex<float>, float>, K=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m
          detected during:
            instantiation of [01m"auto cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr_impl<T,K>(K *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, T=std::conditional_t<false, cublasdx::complex<float>, float>, K=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m [32m
(45): here[0m
            instantiation of [01m"auto cublasdx::detail::pointer_layout<PointerTag, Layout>::make_ptr(T *) [with PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, T=std::conditional_t<false, cublasdx::complex<float>, float>]"[0m [32m
(71): here[0m
            instantiation of [01m"auto cublasdx::make_tensor(T *, const cublasdx::detail::pointer_layout<PointerTag, Layout> &) [with T=std::conditional_t<false, cublasdx::complex<float>, float>, PointerTag=cublasdx::detail::smem_tag, Layout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(46): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(108)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::heuristic_permutation(const cute::Tensor<AEngine, ALayout> &, const cute::Tensor<BEngine, BLayout> &) [with AEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m
          detected during:
            instantiation of [01m"auto cute::heuristic_permutation(const cute::Tensor<AEngine, ALayout> &, const cute::Tensor<BEngine, BLayout> &) [with AEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
(159): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Fu_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(51): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/numeric/arithmetic_tuple.hpp(87)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::as_arithmetic_tuple(const T &) [with T=cute::C<5999>]"[0m
          detected during:
            instantiation of [01m"auto cute::as_arithmetic_tuple(const T &) [with T=cute::C<5999>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(643): here[0m
            instantiation of [01m"auto cute::coshape<Is...,Shape,Stride>(const cute::Layout<Shape, Stride> &) [with Is=<>, Shape=cute::Shape<cute::tuple<cute::Int<60>, cute::Int<100>>, cute::_1>, Stride=cute::Stride<cute::tuple<cute::Int<100>, cute::Int<1>>, cute::_0>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1082): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::Int<100>, cute::Int<60>>, LStride=cute::tuple<cute::C<60>, cute::_1>, RShape=cute::Shape<cute::tuple<cute::Int<60>, cute::Int<100>>, cute::_1>, RStride=cute::Stride<cute::tuple<cute::Int<100>, cute::Int<1>>, cute::_0>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::Int<100>, cute::Int<60>>, LStride=cute::tuple<cute::C<60>, cute::_1>, TShape=cute::tuple<cute::Int<60>, cute::Int<100>>, TStride=cute::tuple<cute::Int<100>, cute::Int<1>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(866): here[0m
            instantiation of [01m"auto cute::logical_divide(Tensor &&, const Tiler &) [with Tensor=const cute::Tensor<cute::ViewEngine<cute::gmem_ptr<const float *>>, cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>> &, Tiler=cute::Layout<cute::tuple<cute::Int<60>, cute::Int<100>>, cute::tuple<cute::Int<100>, cute::Int<1>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(163): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Fu_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(51): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::Int<100>, cute::Int<60>>, Stride=cute::tuple<cute::C<60>, cute::_1>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::Int<100>, cute::Int<60>>, Stride=cute::tuple<cute::C<60>, cute::_1>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Shape<cute::Int<100>, cute::Int<60>>, Stride=cute::tuple<cute::C<60>, cute::_1>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::Int<100>, cute::Int<60>>, LStride=cute::tuple<cute::C<60>, cute::_1>, RShape=cute::Shape<cute::tuple<cute::Int<60>, cute::Int<100>>, cute::_1>, RStride=cute::Stride<cute::tuple<cute::Int<100>, cute::Int<1>>, cute::_0>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::Int<100>, cute::Int<60>>, LStride=cute::tuple<cute::C<60>, cute::_1>, TShape=cute::tuple<cute::Int<60>, cute::Int<100>>, TStride=cute::tuple<cute::Int<100>, cute::Int<1>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(866): here[0m
            instantiation of [01m"auto cute::logical_divide(Tensor &&, const Tiler &) [with Tensor=const cute::Tensor<cute::ViewEngine<cute::gmem_ptr<const float *>>, cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>> &, Tiler=cute::Layout<cute::tuple<cute::Int<60>, cute::Int<100>>, cute::tuple<cute::Int<100>, cute::Int<1>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(163): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Fu_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(51): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(108)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::heuristic_permutation(const cute::Tensor<AEngine, ALayout> &, const cute::Tensor<BEngine, BLayout> &) [with AEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m
          detected during:
            instantiation of [01m"auto cute::heuristic_permutation(const cute::Tensor<AEngine, ALayout> &, const cute::Tensor<BEngine, BLayout> &) [with AEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
(159): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Fu_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(52): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/numeric/arithmetic_tuple.hpp(87)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::as_arithmetic_tuple(const T &) [with T=cute::C<59>]"[0m
          detected during:
            instantiation of [01m"auto cute::as_arithmetic_tuple(const T &) [with T=cute::C<59>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(643): here[0m
            instantiation of [01m"auto cute::coshape<Is...,Shape,Stride>(const cute::Layout<Shape, Stride> &) [with Is=<>, Shape=cute::Shape<cute::Int<60>, cute::Int<1>>, Stride=cute::tuple<cute::C<1>, cute::Int<0>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1082): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::Int<60>, cute::Int<1>>, LStride=cute::Stride<cute::Int<1>, cute::Int<1>>, RShape=cute::Shape<cute::Int<60>, cute::Int<1>>, RStride=cute::tuple<cute::C<1>, cute::Int<0>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::Int<60>, cute::Int<1>>, LStride=cute::Stride<cute::Int<1>, cute::Int<1>>, TShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<60>>>, TStride=cute::C<1>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(866): here[0m
            instantiation of [01m"auto cute::logical_divide(Tensor &&, const Tiler &) [with Tensor=const cute::Tensor<cute::ViewEngine<cute::gmem_ptr<const float *>>, cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>> &, Tiler=cute::Layout<std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<60>>>, cute::C<1>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_copy.hpp(163): here[0m
            instantiation of [01m"void cute::cooperative_copy<NumThreads,MaxVecBits,SrcEngine,SrcLayout,DstEngine,DstLayout>(const uint32_t &, const cute::Tensor<SrcEngine, SrcLayout> &, cute::Tensor<DstEngine, DstLayout> &) [with NumThreads=32U, MaxVecBits=32U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(44): here[0m
            instantiation of [01m"void cublasdx::copy<NumThreads,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(unsigned int, const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with NumThreads=32U, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/copy.hpp(88): here[0m
            instantiation of [01m"void cublasdx::copy<BLAS,AlignmentInBytes,SrcEngine,SrcLayout,DstEngine,DstLayout>(const cublasdx::tensor<SrcEngine, SrcLayout> &, cublasdx::tensor<DstEngine, DstLayout> &) [with BLAS=footstep::Fu_GEMM, AlignmentInBytes=4U, SrcEngine=cute::ViewEngine<cute::gmem_ptr<const float *>>, SrcLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, DstEngine=cute::ViewEngine<cute::smem_ptr<float *>>, DstLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(52): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<100>, Stride=cute::Int<60>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<100>, Stride=cute::Int<60>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Int<100>, Stride=cute::Int<60>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Int<100>, LStride=cute::Int<60>, RShape=cute::Shape<cute::_1, cute::Int<100>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Int<100>, LStride=cute::Int<60>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1514): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::Int<100>, LStride=cute::Int<60>, Tiler=cute::_1]"[0m [32m
(1510): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<60>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=60, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<60>>>, Stride=cute::C<1>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<60>>>, Stride=cute::C<1>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<60>>>, Stride=cute::C<1>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<60>>>, LStride=cute::C<1>, RShape=cute::Shape<cute::_1, cute::Int<60>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<60>>>, LStride=cute::C<1>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1514): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=std::__tuple_element_t<1UL, std::tuple<cute::tuple<cute::C<1>>, cute::C<60>>>, LStride=cute::C<1>, Tiler=cute::Int<1>]"[0m [32m
(1510): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<60>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=60, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::Int<60>>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::Int<60>>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Shape<cute::_1, cute::Int<100>>, Stride=cute::Stride<cute::_0, cute::Int<60>>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<100>>, LStride=cute::Stride<cute::_0, cute::Int<60>>, RShape=cute::Shape<cute::_1, cute::Int<100>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<100>>, LStride=cute::Stride<cute::_0, cute::Int<60>>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1510): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<cute::Shape<cute::_1, cute::Int<100>>, cute::Stride<cute::_0, cute::Int<60>>>, <auto-2>=cute::Layout<cute::_1, cute::LayoutLeft::Apply<cute::_1>>]"[0m [32m
(733): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<60>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=60, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(893)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::_1, <auto-2>=cute::Int<60>]"[0m
          detected during:
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::_1, <auto-2>=cute::Int<60>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/tuple_algorithms.hpp(418): here[0m
            instantiation of [01m"auto cute::detail::fold(T &&, V &&, F &&, cute::seq<I0>) [with T=cute::Stride<cute::Int<1>, cute::Int<60>>, V=cute::_1, F=lambda [](const auto &, const auto &)->auto &, I0=1]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/tuple_algorithms.hpp(483): here[0m
            instantiation of [01m"auto cute::fold_first(T &&, F &&) [with T=cute::Stride<cute::Int<1>, cute::Int<60>>, F=lambda [](const auto &, const auto &)->auto]"[0m [32m
(896): here[0m
            instantiation of [01m"auto cute::coalesce(const Shape &) [with Shape=cute::tuple<cute::Int<1>, cute::C<60>>]"[0m [32m
(1128): here[0m
            instantiation of [01m"auto cute::detail::complement(const Shape &, const Stride &, const CoTarget &) [with Shape=cute::C<1>, Stride=cute::C<0>, CoTarget=cute::tuple<cute::Int<1>, cute::C<60>>]"[0m [32m
(1181): here[0m
            [ 11 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<60>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=60, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<60>>, Stride=cute::Stride<cute::_0, cute::Int<1>>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<60>>, Stride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Shape<cute::_1, cute::Int<60>>, Stride=cute::Stride<cute::_0, cute::Int<1>>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<60>>, LStride=cute::Stride<cute::_0, cute::Int<1>>, RShape=cute::Shape<cute::_1, cute::Int<60>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<60>>, LStride=cute::Stride<cute::_0, cute::Int<1>>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1510): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<cute::Shape<cute::_1, cute::Int<60>>, cute::Stride<cute::_0, cute::Int<1>>>, <auto-2>=cute::Layout<cute::_1, cute::LayoutLeft::Apply<cute::_1>>]"[0m [32m
(733): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<60>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=60, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::C<6000>, Stride=cute::_1]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::C<6000>, Stride=cute::_1]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::C<6000>, Stride=cute::_1, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::C<6000>, LStride=cute::_1, RShape=cute::Shape<cute::Int<100>, cute::Int<60>>, RStride=cute::tuple<cute::C<60>, cute::_1>]"[0m [32m
(1593): here[0m
            instantiation of [01m"auto cute::logical_product(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, TShape=cute::Shape<cute::Int<100>, cute::Int<60>>, TStride=cute::tuple<cute::C<60>, cute::_1>]"[0m [32m
(1627): here[0m
            instantiation of [01m"auto cute::zipped_product(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::_1, LStride=cute::LayoutLeft::Apply<cute::_1>, Tiler=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>]"[0m [32m
(1638): here[0m
            [ 7 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<60>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=60, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(366)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Arg0=cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<0>, cute::C<60>, cute::_1>>, Args=<>]"[0m
          detected during:
            instantiation of [01m"auto cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Arg0=cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<0>, cute::C<60>, cute::_1>>, Args=<>]"[0m [32m
(381): here[0m
            instantiation of [01m"auto cute::make_tensor<T,Args...>(const Args &...) [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Args=<cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<0>, cute::C<60>, cute::_1>>>]"[0m [32m
(437): here[0m
            instantiation of [01m"auto cute::make_fragment_like<NewT,Layout>(const Layout &) [with NewT=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Layout=cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<0>, cute::C<60>, cute::_1>>]"[0m [32m
(445): here[0m
            instantiation of [01m"auto cute::make_fragment_like<NewT,Engine,Layout>(const cute::Tensor<Engine, Layout> &) [with NewT=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Engine=cute::ViewEngine<cute::smem_ptr<float *>>, Layout=std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<0>, cute::C<60>, cute::_1>>, cute::C<0>>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/atom/mma_atom.hpp(160): here[0m
            instantiation of [01m"auto cute::MMA_Atom<cute::MMA_Traits<Args...>>::make_fragment_A(ATensor &&) [with Args=<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, ATensor=cute::Tensor<cute::ViewEngine<cute::smem_ptr<float *>>, std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::Layout<cute::tuple<cute::C<1>, cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<0>, cute::C<60>, cute::_1>>, cute::C<0>>>> &]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(89): here[0m
            [ 2 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<60>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=60, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/tensor_impl.hpp(366)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Arg0=cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<60>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>, Args=<>]"[0m
          detected during:
            instantiation of [01m"auto cute::MakeTensor<T>::operator()(const Arg0 &, const Args &...) const [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Arg0=cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<60>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>, Args=<>]"[0m [32m
(381): here[0m
            instantiation of [01m"auto cute::make_tensor<T,Args...>(const Args &...) [with T=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Args=<cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<60>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>>]"[0m [32m
(437): here[0m
            instantiation of [01m"auto cute::make_fragment_like<NewT,Layout>(const Layout &) [with NewT=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Layout=cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<60>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>]"[0m [32m
(445): here[0m
            instantiation of [01m"auto cute::make_fragment_like<NewT,Engine,Layout>(const cute::Tensor<Engine, Layout> &) [with NewT=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Engine=cute::ViewEngine<cute::smem_ptr<float *>>, Layout=std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<60>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>, unsigned int>>]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/atom/mma_atom.hpp(182): here[0m
            instantiation of [01m"auto cute::MMA_Atom<cute::MMA_Traits<Args...>>::make_fragment_B(BTensor &&) [with Args=<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, BTensor=cute::Tensor<cute::ViewEngine<cute::smem_ptr<float *>>, std::__tuple_element_t<(std::size_t)0UL, std::tuple<cute::Layout<cute::tuple<cute::C<1>, cute::Int<1>, cute::C<60>>, cute::tuple<cute::Int<0>, cute::_0, cute::_1>>, unsigned int>>> &]"[0m [32m
/usr/local/mathdx/24.08/external/cutlass/include/cute/algorithm/cooperative_gemm.hpp(90): here[0m
            [ 2 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<60>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=60, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<60>, Stride=cute::ScaledBasis<cute::C<1>, 1>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Int<60>, Stride=cute::ScaledBasis<cute::C<1>, 1>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Int<60>, Stride=cute::ScaledBasis<cute::C<1>, 1>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Int<60>, LStride=cute::ScaledBasis<cute::C<1>, 1>, RShape=cute::Shape<cute::_1, cute::Int<60>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Int<60>, LStride=cute::ScaledBasis<cute::C<1>, 1>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1514): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const Tiler &) [with LShape=cute::Int<60>, LStride=cute::ScaledBasis<cute::C<1>, 1>, Tiler=cute::Int<1>]"[0m [32m
(1510): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<60>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=60, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/usr/local/mathdx/24.08/external/cutlass/include/cute/layout.hpp(827)[0m: [01;35mwarning[0m: missing return statement at end of non-void function [01m"cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<60>>, Stride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>]"[0m
          detected during:
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &) [with Shape=cute::Shape<cute::_1, cute::Int<60>>, Stride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>]"[0m [32m
(839): here[0m
            instantiation of [01m"auto cute::detail::coalesce_x(const cute::Layout<Shape, Stride> &, const IntTuple &) [with Shape=cute::Shape<cute::_1, cute::Int<60>>, Stride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>, IntTuple=cute::C<0>]"[0m [32m
(1083): here[0m
            instantiation of [01m"auto cute::composition(const cute::Layout<LShape, LStride> &, const cute::Layout<RShape, RStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<60>>, LStride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>, RShape=cute::Shape<cute::_1, cute::Int<60>>, RStride=cute::Stride<cute::_0, cute::Int<1>>]"[0m [32m
(1499): here[0m
            instantiation of [01m"auto cute::logical_divide(const cute::Layout<LShape, LStride> &, const cute::Layout<TShape, TStride> &) [with LShape=cute::Shape<cute::_1, cute::Int<60>>, LStride=cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>, TShape=cute::_1, TStride=cute::LayoutLeft::Apply<cute::_1>]"[0m [32m
(1510): here[0m
            instantiation of function [01m"lambda [](const auto &, const auto &)->auto [with <auto-1>=cute::Layout<cute::Shape<cute::_1, cute::Int<60>>, cute::Stride<cute::_0, cute::ScaledBasis<cute::C<1>, 1>>>, <auto-2>=cute::Layout<cute::_1, cute::LayoutLeft::Apply<cute::_1>>]"[0m [32m
(733): here[0m
            [ 8 instantiation contexts not shown ]
            instantiation of [01m"void cute::cooperative_gemm<SmemCopyOpA,SmemCopyOpB,SmemCopyOpC,Args...,Alpha,TA,ALayout,TB,BLayout,Beta,TC,CLayout,ALoadTransformOp,BLoadTransformOp,CLoadTransformOp,CStoreTransformOp,<unnamed>>(uint32_t, const cute::TiledMMA<Args...> &, const Alpha &, cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, const Beta &, cute::Tensor<TC, CLayout>, const ALoadTransformOp &, const BLoadTransformOp &, const CLoadTransformOp &, const CStoreTransformOp &) [with SmemCopyOpA=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpB=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, SmemCopyOpC=std::conditional_t<false, cute::AutoVectorizingCopyWithAssumedAlignment<32>, cute::AutoVectorizingCopyWithAssumedAlignment<32>>, Args=<cute::MMA_Atom<cublasdx::detail::UniversalFMA<cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>>, cute::Layout<cute::tuple<cute::_1, cute::C<32>, cute::_1>, cute::tuple<cute::Int<0>, cute::Int<1>, cute::C<0>>>, cute::Tile<cute::Underscore, cute::Underscore, cute::Underscore>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::tuple<cute::Int<1>, cute::C<60>>, cute::tuple<cute::_1, cute::_1>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreTransformOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, <unnamed>=(void *)nullptr]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/../database/cute.hpp(159): here[0m
            instantiation of [01m"void cublasdx::detail::cute_backend::execution<TypeA, TypeB, TypeC, Alignment, SizeM, SizeN, SizeK, Arrangement, TransposeMode, SM, BlockSize, HasBlockSize, Benchmark, MmaAtom, TileX, TileY>::tensor_gemm(cute::Tensor<TA, ALayout>, cute::Tensor<TB, BLayout>, cute::Tensor<TC, CLayout>, Alpha, Beta, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &) [with TypeA=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeB=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, TypeC=cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>, Alignment=cublasdx::detail::get_or_default_t<cublasdx::operator_type::alignment, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::Alignment<4U, 4U, 4U>>, SizeM=100, SizeN=1, SizeK=60, Arrangement=cublasdx::detail::get_or_default_t<cublasdx::operator_type::arrangement, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<false, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::col_major, cublasdx::arrangement::col_major>, cublasdx::detail::default_blas_arrangement_operator>>, TransposeMode=cublasdx::detail::get_or_default_t<cublasdx::operator_type::transpose_mode, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, std::conditional_t<true, cublasdx::TransposeMode<cublasdx::transpose_mode::transposed, cublasdx::transpose_mode::transposed>, cublasdx::detail::default_blas_transpose_mode_operator>>, SM=cublasdx::detail::get_or_default_t<cublasdx::operator_type::sm, cublasdx::detail::blas_operator_wrapper<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::SM<700U>>, BlockSize=cublasdx::detail::get_or_default_t<cublasdx::operator_type::block_dim, cublasdx::detail::blas_execution<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, cublasdx::BlockDim<32U, 1U, 1U>>, HasBlockSize=false, Benchmark=false, MmaAtom=cublasdx::detail::cute_backend::mma_atom::universal_fma, TileX=0, TileY=0, TA=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, Alpha=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TB=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, Beta=std::enable_if_t<true, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, TC=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, BLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CLoadOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>, CStoreOp=cublasdx::detail::transform_op_wrapper<cute::identity, std::conditional_t<false, cublasdx::complex<float>, float>, cublasdx::detail::convert_to_cutlass_type_t<std::conditional_t<false, cublasdx::complex<float>, float>>>]"[0m [32m
/usr/local/mathdx/24.08/include/cublasdx/include/detail/blas_execution.hpp(485): here[0m
            instantiation of [01m"auto cublasdx::detail::blas_block_execution<Operators...>::execute(const CEngine::value_type &, cublasdx::tensor<AEngine, ALayout>, cublasdx::tensor<BEngine, BLayout>, const CEngine::value_type &, cublasdx::tensor<CEngine, CLayout>, const ALoadOp &, const BLoadOp &, const CLoadOp &, const CStoreOp &)->cublasdx::detail::blas_block_execution<Operators...>::execute_enable_if_t<CEngine::value_type, AEngine::value_type, BEngine::value_type, CEngine::value_type, CEngine::value_type> [with Operators=<cublasdx::Size<100U, 1U, 60U>, cublasdx::Precision<float, float, float>, cublasdx::Type<(cublasdx::type)0>, cublasdx::Function<cublasdx::function::MM>, cublasdx::Arrangement<cublasdx::arrangement::row_major, cublasdx::arrangement::row_major, cublasdx::arrangement::col_major>, cublasdx::SM<860U>, cublasdx::Block>, AEngine=cute::ViewEngine<cute::smem_ptr<float *>>, ALayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<60>>, cute::tuple<cute::C<60>, cute::_1>>, BEngine=cute::ViewEngine<cute::smem_ptr<float *>>, BLayout=cute::Layout<cute::Shape<cute::Int<60>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<1>>>, CEngine=cute::ViewEngine<cute::smem_ptr<float *>>, CLayout=cute::Layout<cute::Shape<cute::Int<100>, cute::Int<1>>, cute::Stride<cute::Int<1>, cute::Int<100>>>, ALoadOp=cute::identity, BLoadOp=cute::identity, CLoadOp=cute::identity, CStoreOp=cute::identity]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(57): here[0m
            instantiation of [01m"void footstep::gemm_kernel<GEMM>(float, const float *, const float *, float, float *, char *) [with GEMM=footstep::Fu_GEMM]"[0m [32m
/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(96): here[0m
            instantiation of [01m"void footstep::UpdateState(cudaprocess::CudaParamClusterData<T> *, const float *, const float *, float *) [with T=1024]"[0m [32m
/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu(399): here[0m

[01m[0m[01m/home/chris/footstep-CUDA-DE/include/footstep/model.cuh(131)[0m: [01;35mwarning[0m: variable [01m"cs_dist_to_target"[0m was set but never used

1 error detected in the compilation of "/home/chris/footstep-CUDA-DE/src/diff_evolution_solver/solver.cu".
make[2]: *** [CMakeFiles/cuda_DE.dir/build.make:110: CMakeFiles/cuda_DE.dir/src/diff_evolution_solver/solver.cu.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:144: CMakeFiles/cuda_DE.dir/all] Error 2
make: *** [Makefile:91: all] Error 2
[1m[7m%[27m[1m[0m                                                             ]2;chris@chris-pc:~/footstep-CUDA-DE/build]1;..CUDA-DE/build]7;file://chris-pc/home/chris/footstep-CUDA-DE/build\[0m[27m[24m[J
[1m[33m22:39:54[0m[33m[39m[1m [0m[1min [0m[1m[36mfootstep-CUDA-DE/build[0m[36m[39m[1m [0m[1mvia ðŸ’» [0m[1m[34mlab_env[0m[34m[39m[1m [0m[1m[37m
[0m[37m[39m[1m[31mâžœ [0m[31m[39m[1m [0m[K[57C[1A[1B[57D[?1h=[?2004h[A[A[0m[27m[24m[J
[1m[33m22:39:55[0m[33m[39m[1m [0m[1min [0m[1m[36mfootstep-CUDA-DE/build[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[35mî‚  main[0m[35m[39m[1m[31m [!?][0m[31m[39m[0m[39m[1m [0m[1mvia ðŸ’» [0m[1m[34mlab_env[0m[34m[39m[1m [0m[1m[37m
[0m[37m[39m[1m[31mâžœ [0m[31m[39m[1m [0m[K[57C[1A[1B[57D[1m[31me[0m[39m[1m[31me[0m[39m[90mxit[39m[0m[32me[32mx[32mi[32mt[39m[?1l>[?2004l
]2;exit]1;exit
Script done on 2025-02-12 22:40:39-06:00 [COMMAND_EXIT_CODE="2"]
